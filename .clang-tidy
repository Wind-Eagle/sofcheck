Checks: "-*, \
bugprone-*, \
cert-*, \
clang-analyzer-*, \
cppcoreguidelines-*, \
hicpp-*, \
misc-*, \
modernize-*, \
performance-*, \
portability-*, \
readability-*, \
-bugprone-suspicious-semicolon, \
-modernize-use-trailing-return-type, \
-modernize-avoid-c-arrays, \
-cppcoreguidelines-avoid-c-arrays, \
-cppcoreguidelines-avoid-magic-numbers, \
-cppcoreguidelines-macro-usage, \
-cppcoreguidelines-pro-bounds-*, \
-cppcoreguidelines-pro-type-reinterpret-cast, \
-hicpp-avoid-c-arrays, \
-hicpp-braces-around-statements, \
-hicpp-no-array-decay, \
-hicpp-signed-bitwise, \
-modernize-use-nodiscard, \
-misc-non-private-member-variables-in-classes, \
-readability-braces-around-statements, \
-readability-implicit-bool-conversion, \
-readability-magic-numbers, \
-readability-misleading-indentation"

# Notes:
# - hicpp-signed-bitwise might be interesting to fix, but there is too much bit magic, and most of
# the issues here are constructs like (x << 3).
# - cppcoreguidelines-avoid-magic-numbers is disabled because the chess rules contain enough
# magic, and I am lazy to put them into constants.
# - readability-magic-numbers is tightly related to the previous issue.
# - hicpp-braces-around-statements is buggy with if constexpr.
# - readability-misleading-indentation is also buggy with if constexpr.
# - bugprone-suspicious-semicolon is also buggy with if constexpr.
# - readability-braces-around-statements is also buggy with if constexpr.
# - misc-non-private-member-variables-in-classes is disabled by design.

CheckOptions:
    - key: readability-identifier-naming.ClassCase
      value: CamelCase
    - key: readability-identifier-naming.ClassConstantCase
      value: UPPER_CASE
    - key: readability-identifier-naming.EnumCase
      value: CamelCase
    - key: readability-identifier-naming.EnumConstantCase
      value: CamelCase
    - key: readability-identifier-naming.FunctionCase
      value: camelBack
    - key: readability-identifier-naming.GlobalConstantCase
      value: UPPER_CASE
    - key: readability-identifier-naming.GlobalVariableCase
      value: camelBack
    - key: readability-identifier-naming.GlobalVariablePrefix
      value: g_
    - key: readability-identifier-naming.GlobalConstantPointerCase
      value: UPPER_CASE
    - key: readability-identifier-naming.MacroDefinitionCase
      value: UPPER_CASE
    - key: readability-identifier-naming.MethodCase
      value: camelBack
    - key: readability-identifier-naming.NamespaceCase
      value: CamelCase
    - key: readability-identifier-naming.ParameterCase
      value: camelBack
    - key: readability-identifier-naming.PrivateMemberCase
      value: camelBack
    - key: readability-identifier-naming.PrivateMemberSuffix
      value: _
    - key: readability-identifier-naming.PublicMemberCase
      value: camelBack
    - key: readability-identifier-naming.StaticConstantCase
      value: UPPER_CASE
    - key: readability-identifier-naming.TemplateParameterCase
      value: CamelCase
    - key: readability-identifier-naming.TypeAliasCase
      value: lower_case
    - key: readability-identifier-naming.TypeAliasCaseSuffix
      value: _t
    - key: readability-identifier-naming.TypedefCase
      value: lower_case
    - key: readability-identifier-naming.TypedefCaseSuffix
      value: _t
    - key: readability-identifier-naming.UnionCase
      value: CamelCase
    - key: readability-identifier-naming.ValueTemplateParameterCase
      value: CamelCase    
    - key: readability-identifier-naming.VariableCase
      value: camelBack
